  .popup-button-container {
    position: absolute;
    left: 1vw;
    top: 1vh;
    height: 9vh;
    width: 10vw;
    overflow: hidden;
  }

  1
  2{console.log("nextSibling " + temps); console.log(track_list[event.target.id].index)}



  TODO 
  -figure out how im storing newly added files because i wont send them to the server and then request all of the data from the server again
  -finish db hookup (probably will take a while lots of server.js work needs to be done to parse the data into the json i want)
  -i also have no exception / error handling and no promises so see about that
  -create new playlist feature
  
  track_list.forEach( item => {
          console.log("id: "+item.id);
          console.log("index: "+item.index);
        });

//loops through a list (playlistData) and returns the object in order
track_list[track_id_finder(playlistData.childNodes[i].id)].xxx


<div class="checkboxes-container">

            <% data.json.forEach(function callback(element, index) { %>
              <label class="container"> <%= element.name %>
                <input type="checkbox" id ="checkbox_item" name="checkbox[]" value="<%=element.name%>" onclick="toggleCheckValue(<%=index%>)">
                <span class="checkmark"></span>
              </label>
              <% }); %>
            
            </div>

res.render('Homepage', {data: {json: playlistData}});




01,34  02,30    store ts and te as strings with , between instead of :

name,
artist,
id,
index, 
image,
path: "",
ts: "00,04"
te: "02,12"  varchar 
->
02 * 60 + 12 = time
      <<  ||  >>            1 of 22
                            Songname
00:04 -----o------ 02:50    Artist

Songname
Artist

<% data.json.forEach(function callback(element, index) { %>
          <li class="playlist-list-item<%=index%>" onclick="handleListClick( <%= index %> )"><%= element.name %></li>
        <% }); %>


        02 30
        02*60 + 30 = 150
        

        function isPasswordCorrect(savedHash, savedSalt, savedIterations, passwordAttempt) {
  //retreive row from db --probably rename these parameters
  let newhash = "";
  return new Promise(resolve => {
    crypto.pbkdf2(passwordAttempt, savedSalt, savedIterations, 64, 'sha512', (err, derivedKey) => {
      if (err) throw err;
      newhash = derivedKey.toString('hex'); 
      resolve(hash == newhash);
    });
  });
}

async function helper() {

    let obj = await getPlaylistListFromDb(uid);   //list of all playlists for user (gets the name of playlist)
    obj.forEach((element, index) => {
      playlistNames.push(element.name);
      playlistData.push({
        name: element.name,
        data: []
      });
      async function playlistSongHelper() {
        let playlist_dataobj = await getPlaylistSongList(element.pid, uid);   //list of songs for a single playlist from playlist_data
        playlist_dataobj.forEach(elem => {
          async function doSomething() {
            let trackRow = await selectFromTracks(elem.sid);     //song data from Tracks
            console.log(trackRow);                              //assign this and playlist_dataobj data to obj and add it to playlist data obj in array
            playlistData[index].data.push({
              id: trackRow[0].track_id,
              index: elem.song_index,
              name: trackRow[0].title,
              artist: trackRow[0].artist,
              path: trackRow[0].path,
              ts: elem.ts,
              te: elem.te
            });
          }
          doSomething();
        });
      }
      playlistSongHelper();
      
    });

  }
  helper();

  take edit_list
  iterate through and find the id in track_list that matches the id of editlist item
  set that objects index to i

  1.BUG FIXES
  2.DELETE PLAYLISTS, SONGS
  3.TOUCH UP 

make sure reload track isnt fucked up
remove the playing x of y and change it to the current playing playlist

 SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE `mydb`.`Tracks`;

have to account for 
  -next track   use curr_track
  -prev track   use curr`
  -next track during fade -use curr_track
  -prev track during fade  -use curr_track
  -song click               -use curr_track
  -song click during fade     -use curr_track
  -song switch at the end of duration   -use the track not in use

curr is playing,
if curr > end time - faderLength
play other track and switch all of the info


i have to have 2 audio elements
i will start with the same one every time
only when i am fading tracks should i switch the audio element //probably
when i click a song to play it should keep the same audio element

i am on deletesonghelper

result.affectedRows

dont forget to fix the other ajax post requests. add in the server a response, thanks chat

rewrite the way to display playlists


let x = await dowloadS3('y2mate.com - FLAMIN HOT CHEETOS CLAIRO LYRICS(1).mp3');
      console.log(x);
      fs.writeFile(process.cwd() + '/uploads/clairosong.mp3', x.Body, (err) => {
        if (err)
          console.log(err);
        else {
          console.log("File written successfully\n");
          console.log("The written has the following contents:");
        }
      });
      console.log(x);
      playlistData[0].data[0].path = "uploads/clairosong.mp3";


song cache attempt
      let cachedSongs = [];
async function loadTrack(track_index, track) {
    // Clear the previous seek timer
    console.log(track_list[track_index].name);
    clearInterval(updateTimer);
    resetValues();
    if (!cachedSongs.includes(track_list[track_index].path)) {
    let source  = await getSong(track_list[track_index].path);
    cachedSongs.push(track_list[track_index].path);
    }



    songs still play a little slow
    might need to switch off of using wav bc they are so big
    probably want to develop a cache of sorts, code above
    -deleting the last playlist doesnt delete it from view. probably bcuz the template thing i wrote

    @media only screen
and (min-device-width: 300px)
and (max-device-width: 500px)

@media only screen 
and (min-device-width: 500px)


<% data.json.forEach(function callback(element, index) { %>
          <li class="playlist-list-item<%=index%>" onclick="handleListClick( <%= index %> )"><%= element.name %></li>
        <% }); %>

